{"version":3,"sources":["Die.js","RollDice.js","App.js","reportWebVitals.js","index.js"],"names":["Die","className","this","props","num","Component","RollDice","state","die1","die2","genRand","bind","numsByWord","word1","Math","floor","random","word2","setState","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAEMA,E,4JACJ,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,0BAAf,SACE,mBAAGA,UAAS,sBAAiBC,KAAKC,MAAMC,IAA5B,qB,GALJC,aAWHL,ICsBAM,E,kDA/Bb,WAAYH,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,CACXC,KAAM,MACNC,KAAM,OAER,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBANE,E,2CAQnB,WACE,IAAMC,EAAa,CAAC,OAAQ,MAAO,MAAO,QAAS,OAAQ,OAAQ,OAE/DC,EAAQD,EADAE,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,GAGxCC,EAAQL,EADAE,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,GAE5Cd,KAAKgB,SAAS,CAAEV,KAAMK,EAAOJ,KAAMQ,M,oBAErC,WACE,OACE,sBAAKhB,UAAU,WAAf,UACE,cAAC,EAAD,CAAKG,IAAKF,KAAKK,MAAMC,OACrB,cAAC,EAAD,CAAKJ,IAAKF,KAAKK,MAAME,OACrB,8BACE,wBAAQU,QAASjB,KAAKQ,QAAST,UAAU,eAAzC,gC,GAvBaI,aCQRe,MARf,WACE,OACE,qBAAKnB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4ea8eb45.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Die.css\";\nclass Die extends Component {\n  render() {\n    return (\n      <div className=\"Die\">\n        <div className=\"Die-style Die-animation\">\n          <i className={`fas fa-dice-${this.props.num} fa-10x`}></i>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Die;\n\n// this.props.num give num 1,2,3...","import React, { Component } from \"react\";\nimport \"./RollDice.css\";\nimport Die from \"./Die\";\nclass RollDice extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      die1: \"one\",\n      die2: \"six\",\n    };\n    this.genRand = this.genRand.bind(this);\n  }\n  genRand() {\n    const numsByWord = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\"];\n    let rand1 = Math.floor(Math.random() * 6) + 1;\n    let word1 = numsByWord[rand1];\n    let rand2 = Math.floor(Math.random() * 6) + 1;\n    let word2 = numsByWord[rand2];\n    this.setState({ die1: word1, die2: word2 });\n  }\n  render() {\n    return (\n      <div className=\"RollDice\">\n        <Die num={this.state.die1} />\n        <Die num={this.state.die2} />\n        <div>\n          <button onClick={this.genRand} className=\"RollDice-but\">\n            Roll Dice\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RollDice;\n","import \"./App.css\";\nimport RollDice from \"./RollDice\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RollDice />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}